async function checkConfig(){try{var e=await getConfig();if(e.error)return!1;if(!e.configured)return!1}catch(e){return console.error(e),!1}return!0}async function sendConfig(e){e=await fetch("/api/v1/config",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({config:e})});if(!e.ok)return e.status}async function getConfig(){try{return await(await fetch("/api/v1/config",{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"})).json()}catch(e){return console.error(e),{error:e.message}}}async function sendFlag(e){return await fetch("/api/v1/submit-flag",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({flag:e})})}async function deleteFlag(e){return await fetch("/api/v1/delete-flag?flag="+e,{method:"DELETE",credentials:"include"})}function getServiceEntries(e){return e.value.map(e=>{var[e,t]=e.value.split(":");return{name:e.trim(),port:parseInt(t,10)}}).filter(e=>e.name&&!isNaN(e.port))}function validateConfigForm(e,t){var a,n,r={team_token:e=>0<e.length,url_flag_checker:e=>0<e.length,protocol:e=>0<e.length,start_time:e=>/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/.test(e),end_time:e=>/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$/.test(e),max_flag_batch_size:e=>0<parseInt(e),tick_time:e=>0<parseInt(e),submit_flag_checker_time:e=>0<=parseInt(e),flag_ttl:e=>0<parseInt(e),regex_flag:e=>{try{return new RegExp(e),!0}catch(e){return!1}},format_ip_teams:e=>/^((\d{1,3}|\{\})\.){3}(\d{1,3}|\{\})$/.test(e),my_team_id:e=>0<=parseInt(e),url_flag_ids:e=>0<e.length,nop_team:e=>0<=parseInt(e),range_ip_teams:e=>0<parseInt(e)},i=e.getElementById("config-result");for([a,n]of Object.entries(r)){var o=e.getElementById(a),l=o?.value.trim();if(!l||!n(l))return o?.focus(),i.textContent="Invalid or missing: "+a.replace(/_/g," "),i.classList.add("text-red-500"),!1}return 0!==getServiceEntries(t).length||(e.getElementById("services").focus(),!(i.textContent="Please provide at least one valid service (name:port)"))}function buildConfigFromDOM(t,e){var a=e=>t.getElementById(e)?.value.trim();return{configured:!0,server:{url_flag_checker:a("url_flag_checker"),team_token:a("team_token"),protocol:a("protocol"),start_time:a("start_time"),end_time:a("end_time"),max_flag_batch_size:Number(a("max_flag_batch_size")),tick_time:Number(a("tick_time")),submit_flag_checker_time:Number(a("submit_flag_checker_time")),flag_ttl:Number(a("flag_ttl"))},client:{services:getServiceEntries(e),regex_flag:a("regex_flag"),format_ip_teams:a("format_ip_teams"),my_team_id:Number(a("my_team_id")),url_flag_ids:a("url_flag_ids"),nop_team:Number(a("nop_team")),range_ip_teams:Number(a("range_ip_teams"))}}}async function openModal(){document.getElementById("dialog").classList.remove("hidden"),document.getElementById("table-head").classList.remove("sticky"),await FillModalFields()}export{checkConfig,sendConfig,getConfig,sendFlag,deleteFlag,getServiceEntries,validateConfigForm,buildConfigFromDOM,openModal};