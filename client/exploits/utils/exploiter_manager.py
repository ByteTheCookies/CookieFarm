import sys

from .server import Server
from .exploiter import Exploiter
# from .logger import Logger

# TODO:: Logging
# TODO:: Ruff


def exploit_manager():
    server_address: str = sys.argv[1]
    server_password: str = sys.argv[2]
    threads_num: int = int(sys.argv[3])
    tick_time: int = int(sys.argv[4])
    flag_regex: str = sys.argv[5]
    # logfilename: str = sys.argv[6]

    server: Server = Server(address=server_address, password=server_password)
    exploiter: Exploiter = Exploiter(flag_regex=flag_regex, threads=threads_num, tick=tick_time)

    def decorator(exploit_func):
        ip_teams: list[str] = server.get_ip_teams("/api/v1/config")

        def wrapper(*args, **kwargs):
            if 'port' not in kwargs:
                raise ValueError("Port is required")
            port = str(kwargs['port'])

            exploiter.attack(exploit_function=exploit_func, ip_teams=ip_teams, port_service=port)

        return wrapper

    return decorator
