import os
import json
import logging
from datetime import datetime, timezone

logger = logging.getLogger("ckfrm_logger")
logger.propagate = False  # Evita log duplicati

class JSONFormatter(logging.Formatter):
    def format(self, record: logging.LogRecord) -> str:
        log_data = {
            "module": "exploiter",
            "level": record.levelname.lower(),
            "message": record.getMessage(),
            "time": datetime.now(timezone.utc).astimezone().isoformat(),
            "caller": f"{record.pathname}:{record.lineno}",
        }

        return json.dumps(log_data)


def init_logger(logname: str, level: int = logging.INFO) -> logging.Logger:
    logger.setLevel(level)

    path = f"{logname}"

    if not os.path.exists(path):
        raise FileNotFoundError(f"'{path}' does not exist.")

    if logger.hasHandlers():
        logger.handlers.clear()

    console_handler = logging.StreamHandler()
    console_handler.setFormatter(logging.Formatter("{message}", "%Y-%m-%d %H:%M:%S", style="{"))

    # File JSON log
    file_handler = logging.FileHandler(path, encoding="utf-8", mode="a")
    file_handler.setFormatter(JSONFormatter())

    logger.addHandler(console_handler)
    logger.addHandler(file_handler)

    return logger
